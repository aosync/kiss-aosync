--- a/chrome/browser/BUILD.gn
+++ b/chrome/browser/BUILD.gn
@@ -4187,9 +4187,6 @@
   if (is_linux) {
     if (use_aura) {
       deps += [ "//third_party/fontconfig" ]
-      if (use_dbus) {
-        deps += [ "//dbus" ]
-      }
     }
     if (use_x11) {
       configs += [ "//build/config/linux:x11" ]
@@ -4221,10 +4218,6 @@
       "themes/theme_service_aura_linux.h",
       "upgrade_detector/get_installed_version_linux.cc",
     ]
-
-    if (use_dbus) {
-      deps += [ "//components/dbus/thread_linux" ]
-    }
 
     if (enable_native_notifications) {
       sources += [
--- a/chrome/browser/chrome_browser_main_linux.cc
+++ b/chrome/browser/chrome_browser_main_linux.cc
@@ -103,7 +103,7 @@
 }
 
 void ChromeBrowserMainPartsLinux::PostMainMessageLoopStart() {
-#if !defined(OS_CHROMEOS)
+#if !defined(OS_CHROMEOS) && defined(USE_DBUS)
   bluez::BluezDBusManager::Initialize(nullptr /* system_bus */);
 #endif
 
@@ -111,7 +111,7 @@
 }
 
 void ChromeBrowserMainPartsLinux::PostDestroyThreads() {
-#if !defined(OS_CHROMEOS)
+#if !defined(OS_CHROMEOS) && defined(USE_DBUS)
   bluez::BluezDBusManager::Shutdown();
   bluez::BluezDBusThreadManager::Shutdown();
 #endif
--- a/chrome/browser/metrics/bluetooth_available_utility.cc
+++ b/chrome/browser/metrics/bluetooth_available_utility.cc
@@ -14,7 +14,7 @@
 #include "device/bluetooth/bluetooth_adapter.h"
 #include "device/bluetooth/bluetooth_adapter_factory.h"
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) && defined(USE_DBUS)
 #include "device/bluetooth/dbus/bluez_dbus_manager.h"
 #endif  // defined(OS_LINUX)
 
@@ -58,7 +58,7 @@
     return;
   }
 
-#if defined(OS_LINUX)
+#if defined(OS_LINUX) && defined(USE_DBUS)
   // This is for tests that have not initialized bluez or dbus thread manager.
   // Outside of tests these are initialized earlier during browser startup.
   if (!bluez::BluezDBusManager::IsInitialized())
--- a/extensions/browser/api/bluetooth_low_energy/bluetooth_low_energy_api.cc
+++ b/extensions/browser/api/bluetooth_low_energy/bluetooth_low_energy_api.cc
@@ -1328,7 +1328,7 @@
 // TODO: Ideally this should be handled by our feature system, so that this
 // code doesn't even compile on OSes it isn't being used on, but currently this
 // is not possible.
-#if !defined(OS_WIN)
+#if !defined(OS_WIN) && (!defined(OS_LINUX) || defined(USE_DBUS))
   base::WeakPtr<device::BluetoothLocalGattService> service =
       device::BluetoothLocalGattService::Create(
           event_router_->adapter(),
@@ -1357,6 +1357,7 @@
 }
 
 void BluetoothLowEnergyCreateCharacteristicFunction::DoWork() {
+#if !defined(OS_LINUX) || defined(USE_DBUS)
   device::BluetoothLocalGattService* service =
       event_router_->adapter()->GetGattService(params_->service_id);
   if (!service) {
@@ -1377,6 +1378,9 @@
 
   Respond(ArgumentList(apibtle::CreateCharacteristic::Results::Create(
       characteristic->GetIdentifier())));
+#else
+    Respond(Error(kErrorPlatformNotSupported));
+#endif
 }
 
 // createDescriptor:
@@ -1393,6 +1397,7 @@
 }
 
 void BluetoothLowEnergyCreateDescriptorFunction::DoWork() {
+#if !defined(OS_LINUX) || defined(USE_DBUS)
   device::BluetoothLocalGattCharacteristic* characteristic =
       event_router_->GetLocalCharacteristic(params_->characteristic_id);
   if (!characteristic) {
@@ -1408,6 +1413,9 @@
 
   Respond(ArgumentList(
       apibtle::CreateDescriptor::Results::Create(descriptor->GetIdentifier())));
+#else
+  Respond(Error(kErrorPlatformNotSupported));
+#endif
 }
 
 // registerService:
--- a/services/device/battery/battery_status_manager_default.cc
+++ b/services/device/battery/battery_status_manager_default.cc
@@ -22,11 +22,10 @@
  private:
   // BatteryStatusManager:
   bool StartListeningBatteryChange() override {
-    NOTIMPLEMENTED();
     return false;
   }
 
-  void StopListeningBatteryChange() override { NOTIMPLEMENTED(); }
+  void StopListeningBatteryChange() override { }
 
   DISALLOW_COPY_AND_ASSIGN(BatteryStatusManagerDefault);
 };
